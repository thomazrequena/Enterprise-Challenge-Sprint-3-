-- FASES
CREATE TABLE fases_cultivo (
  id_fase       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome_fase     VARCHAR2(60) NOT NULL UNIQUE,
  ordem         NUMBER(3)     NOT NULL
);

-- CULTURAS
CREATE TABLE culturas (
  id_cultura    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome          VARCHAR2(80) NOT NULL UNIQUE,
  descricao     VARCHAR2(4000)
);

-- AMBIENTES
CREATE TABLE ambientes (
  id_ambiente   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome          VARCHAR2(80) NOT NULL UNIQUE,
  descricao     VARCHAR2(4000),
  area_m2       NUMBER(10,2),
  ativo         CHAR(1) DEFAULT 'Y' CHECK (ativo IN ('Y','N'))
);

-- PARAMETROS IDEIAIS
CREATE TABLE parametros_ideais (
  id_param_ideal NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_fase        NUMBER NOT NULL REFERENCES fases_cultivo(id_fase),
  id_cultura     NUMBER NOT NULL REFERENCES culturas(id_cultura),
  id_ambiente    NUMBER     REFERENCES ambientes(id_ambiente),
  temp_min_c     NUMBER(5,2),
  temp_max_c     NUMBER(5,2),
  umid_rel_min_pct NUMBER(5,2),
  umid_rel_max_pct NUMBER(5,2),
  ec_min_ms      NUMBER(5,2),
  ec_max_ms      NUMBER(5,2),
  ph_min         NUMBER(4,2),
  ph_max         NUMBER(4,2),
  fotoperiodo_horas NUMBER(4,1)
);

-- USUARIOS
CREATE TABLE usuarios (
  id_usuario    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome          VARCHAR2(120) NOT NULL,
  email         VARCHAR2(200) NOT NULL UNIQUE,
  perfil        VARCHAR2(20)  CHECK (perfil IN ('admin','operador')),
  ativo         CHAR(1) DEFAULT 'Y' CHECK (ativo IN ('Y','N'))
);

-- CICLOS
CREATE TABLE ciclos (
  id_ciclo     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_cultura   NUMBER NOT NULL REFERENCES culturas(id_cultura),
  id_ambiente  NUMBER NOT NULL REFERENCES ambientes(id_ambiente),
  data_inicio  DATE NOT NULL,
  data_fim     DATE,
  status       VARCHAR2(20) CHECK (status IN ('ativo','concluido','pausado'))
);

-- CICLO_FASES
CREATE TABLE ciclo_fases (
  id_ciclo_fase NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_ciclo      NUMBER NOT NULL REFERENCES ciclos(id_ciclo),
  id_fase       NUMBER NOT NULL REFERENCES fases_cultivo(id_fase),
  data_inicio   DATE NOT NULL,
  data_fim      DATE,
  observacao    VARCHAR2(4000)
);

-- SENSORES
CREATE TABLE sensores (
  id_sensor   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_ambiente NUMBER NOT NULL REFERENCES ambientes(id_ambiente),
  tipo        VARCHAR2(30) NOT NULL, -- temperatura, umidade, luz, co2, ec, ph
  modelo      VARCHAR2(80),
  unidade     VARCHAR2(15)
);

-- LEITURAS
CREATE TABLE leituras (
  id_leitura   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_sensor    NUMBER NOT NULL REFERENCES sensores(id_sensor),
  id_ciclo_fase NUMBER REFERENCES ciclo_fases(id_ciclo_fase),
  ts_leitura   TIMESTAMP DEFAULT SYSTIMESTAMP,
  valor_num    NUMBER(12,4),
  qualidade    VARCHAR2(20)
);

-- CHECKLISTS
CREATE TABLE checklists (
  id_checklist  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_ciclo_fase NUMBER NOT NULL REFERENCES ciclo_fases(id_ciclo_fase),
  criado_por    NUMBER NOT NULL REFERENCES usuarios(id_usuario),
  ts_criacao    TIMESTAMP DEFAULT SYSTIMESTAMP,
  status        VARCHAR2(20) CHECK (status IN ('aberto','aprovado','reprovado'))
);

-- CHECKLIST_ITENS
CREATE TABLE checklist_itens (
  id_item       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_checklist  NUMBER NOT NULL REFERENCES checklists(id_checklist),
  regra         VARCHAR2(200) NOT NULL,
  valor_medido  VARCHAR2(100),
  faixa_ideal   VARCHAR2(100),
  ok            CHAR(1) CHECK (ok IN ('Y','N')),
  observacao    VARCHAR2(1000)
);

-- ALERTAS
CREATE TABLE alertas (
  id_alerta     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_leitura    NUMBER REFERENCES leituras(id_leitura),
  id_checklist  NUMBER REFERENCES checklists(id_checklist),
  tipo          VARCHAR2(60) NOT NULL,
  mensagem      VARCHAR2(1000),
  severidade    VARCHAR2(20) CHECK (severidade IN ('baixa','media','alta','critica')),
  ts_alerta     TIMESTAMP DEFAULT SYSTIMESTAMP,
  resolvido     CHAR(1) DEFAULT 'N' CHECK (resolvido IN ('Y','N')),
  ts_resolucao  TIMESTAMP,
  resolvido_por NUMBER REFERENCES usuarios(id_usuario)
);

-- AJUSTES
CREATE TABLE ajustes (
  id_ajuste      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_alerta      NUMBER REFERENCES alertas(id_alerta),
  id_checklist   NUMBER REFERENCES checklists(id_checklist),
  acao_recomendada VARCHAR2(1000),
  acao_executada   VARCHAR2(1000),
  ts_execucao      TIMESTAMP,
  executado_por    NUMBER REFERENCES usuarios(id_usuario)
);

-- Índices úteis
CREATE INDEX idx_leituras_ts ON leituras(ts_leitura);
CREATE INDEX idx_leituras_ciclofase ON leituras(id_ciclo_fase);
CREATE INDEX idx_param_ideais_fase_cultura ON parametros_ideais(id_fase, id_cultura);
